#show-tasks {
  margin: 3rem auto 0;
  .row:nth-child(2) {
    margin-top: 2rem;
  }
  .row {
    @for $i from 1 to 12 {
      .col-lg-4:nth-of-type(#{$i}n) {
        .task {
          @if $i < 6 {
            transition-delay: #{$i * 0.1}s;
          } @else {
            transition-delay: 2s;
          }
        }
      }
    }
  }
  .task {
    &.pop-up {
      &-enter {
        transform: scale(0);
      }
      &-enter-active {
        transition-property: transform;
        transition-timing-function: cubic-bezier(0.175, 0.885, 0.32, 1.15);
        transition-duration: .75s;
      }
    }
    font-size: 1.3rem;
    @extend %custome-card;
    &>div{
      @extend %custome-card;
    }
    &__status {
      font-weight: bold;
      color: var(--color-2);
    }
    &__name,&__desc {
      position: relative;
      &:before {
        content: '';
        position: absolute;
        width: 0;
        height: 2px;
        background: var(--color-4) ;
        left: 0;
        transition: width .3s linear 0s;
      }
    }
    &__name:before {
      top: 25px;
    }
    &__desc:before {
      top: 16px;
    }
    .btn-action {
      background-color: var(--color-5);
      width: 100px;
    }
    .btn--delete {
      position: absolute;
      display: block;
      right: 5%;
      top: 3%;
      transition: background-color .2s linear 0;
      @include breakpoint('large-up') {
        opacity: 0;
        transition: background-color .2s linear 0, opacity .2s linear 0s;
      }
      &:hover {
        background-color: crimson!important;
      }
    }
    &:hover .btn--delete {
      @include breakpoint('large-up') {
        opacity: 1;
      }
    }
    .done {
      h3,p {
        &:before {
          width: 100%;
        }
      }
      .task__status {
        color: var(--color-4);
      }
      .btn-action {
        background-color: var(--color-1);
      }
    }
  }
  .btn-uhe {
    margin: auto;
    &:hover {
      color: #fff;
    }
  }
}
%custome-card {
  height: 100%;
  border-radius: 0.3rem;
}

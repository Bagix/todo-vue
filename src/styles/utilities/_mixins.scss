@mixin flex-center($direction: row) {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: $direction;
}

@mixin showUp($props: all, $time: .25s, $function: linear, $delay: 0s, $opacity: 0) {
  opacity: $opacity;
  transition: $props $time $function $delay;
  &.show {
    opacity: 1;
  }
}
@mixin showUpRotate($props: all, $time: .25s, $function: linear, $delay: 0s, $opacity: 0, $rotate-type: X) {
  opacity: $opacity;
  transition: $props $time $function $delay;
  transform: rotate#{$rotate-type}(15deg);
  &.show {
    opacity: 1;
    transform: rotate#{$rotate-type}(0deg);
  }
}

$breakpoints: (
  'x-small-up': (min-width: 576px),
  'small-up': (min-width: 767px),
  'medium-up': (min-width: 992px),
  'large-up': (min-width: 1200px),
  'x-large-up': (min-width: 1600px),
  'x-small-down': (max-width: 577px),
  'small-down': (max-width: 769px),
  'medium-down': (max-width: 993px),
  'large-down': (max-width: 1201px),
  'x-large-down': (max-width: 1601px)
) !default;

@mixin breakpoint($breakpoint) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $breakpoint) {
    // Prints a media query based on the value
    @media #{inspect(map-get($breakpoints, $breakpoint))} {
      @content;
    }
  }
 
  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Available breakpoints are: #{map-keys($breakpoints)}.";
  }
}

